project(alg)
cmake_minimum_required(VERSION 2.8)

set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -g")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g")
set(CMAKE_CXX_FLAGS_DEBUG "$ENV{CXXFLAGS} -O0 -Wall -g -ggdb -std=c++17 -fno-strict-aliasing -Wno-register")
set(CMAKE_CXX_FLAGS_RELEASE "$ENV{CXXFLAGS} -O3 -Wall -std=c++17 -fno-strict-aliasing -Wno-register")
set(CMAKE_BUILD_TYPE "Debug")
include_directories("${PROJECT_SOURCE_DIR}/include")
find_package(Boost REQUIRED COMPONENTS log)
if(NOT Boost_FOUND)
    message("Can not find Boost")
endif()
add_definitions(-DBOOST_SPIRIT_THREADSAFE)
add_definitions(-DBOOST_ALL_DYN_LINK)
add_definitions(-D_DEBUG)
include_directories(${Boost_INCLUDE_DIRS})
link_directories(${Boost_LIBRARY_DIRS})
include_directories("${PROJECT_SOURCE_DIR}/common/util/include")
set(SRCS
"${PROJECT_SOURCE_DIR}/common/util/src/log.cpp" 
)

add_executable(trie ${SRCS} "${PROJECT_SOURCE_DIR}/test/trie.cpp")
target_link_libraries(trie boost_log-mt)
add_executable(heap ${SRCS} "${PROJECT_SOURCE_DIR}/test/heap.cpp")
target_link_libraries(heap boost_log-mt)
add_executable(tree ${SRCS} "${PROJECT_SOURCE_DIR}/test/tree.cpp")
target_link_libraries(tree boost_log-mt)
add_executable(bst ${SRCS} "${PROJECT_SOURCE_DIR}/test/bst.cpp")
target_link_libraries(bst boost_log-mt)
add_executable(list ${SRCS} "${PROJECT_SOURCE_DIR}/test/list.cpp")
target_link_libraries(list boost_log-mt)
add_executable(min_stack ${SRCS} "${PROJECT_SOURCE_DIR}/test/min_stack.cpp")
target_link_libraries(min_stack boost_log-mt)
add_executable(randomized_set ${SRCS} "${PROJECT_SOURCE_DIR}/test/randomized_set.cpp")
target_link_libraries(randomized_set boost_log-mt)
add_executable(util ${SRCS} "${PROJECT_SOURCE_DIR}/test/util.cpp")
target_link_libraries(util boost_log-mt)
add_executable(str ${SRCS} "${PROJECT_SOURCE_DIR}/test/str.cpp")
target_link_libraries(str boost_log-mt)